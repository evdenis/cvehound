/// Files: net/bluetooth/hci_event.c include/net/bluetooth/hci.h
/// Fix: a2ec905d1e160a33b2e210e45ad30445ef26ce0e
/// Fixes: c215e9397b00b3045a668120ed7dbd89f2866e74
/// Version: 1.0.7

virtual detect

@hci_ev_le_ext_adv_report@
@@

struct hci_ev_le_ext_adv_report {
	...
};


@err_store_pending_adv_report depends on hci_ev_le_ext_adv_report@
identifier len, hdev;
position p;
typedef u8;
@@

void store_pending_adv_report(struct hci_dev *hdev, ..., u8 len)
{
	... when != if (len > \(HCI_MAX_AD_LENGTH\|max_adv_len(hdev)\)) return;
*	bacpy@p(...);
	...
}

@err_process_adv_report depends on hci_ev_le_ext_adv_report exists@
identifier len, hdev;
position p;
binary operator cmp = {<=, <, >, >=};
@@

* process_adv_report@p(struct hci_dev *hdev, ..., u8 len)
{
	... when != len cmp \(HCI_MAX_AD_LENGTH\|max_adv_len(hdev)\)
	    when any
}

@script:python depends on detect@
p << err_store_pending_adv_report.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2020-24490')

@script:python depends on detect@
p << err_process_adv_report.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2020-24490')
